ab273e2f searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-06-12 19:53:38 +0200  1) # -*- coding: utf-8 -*-
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  2) from collections import defaultdict
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  3) import mock
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  4) from searx.engines import vimeo
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  5) from searx.testing import SearxTestCase
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  6) 
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  7) 
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  8) class TestVimeoEngine(SearxTestCase):
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100  9) 
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 10)     @little_documented
def test_request(self):
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 11)         query = 'test_query'
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 12)         dicto = defaultdict(dict)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 13)         dicto['pageno'] = 0
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 14)         params = vimeo.request(query, dicto)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 15)         self.assertTrue('url' in params)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 16)         self.assertTrue(query in params['url'])
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 17)         self.assertTrue('vimeo.com' in params['url'])
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 18) 
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 19)     def test_response(self):
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 20)         self.assertRaises(AttributeError, vimeo.response, None)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 21)         self.assertRaises(AttributeError, vimeo.response, [])
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 22)         self.assertRaises(AttributeError, vimeo.response, '')
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 23)         self.assertRaises(AttributeError, vimeo.response, '[]')
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 24) 
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 25)         json = u"""
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 26) {"filtered":{"total":274641,"page":1,"per_page":18,"paging":{"next":"?sizes=590x332&page=2","previous":null,"first":"?sizes=590x332&page=1","last":"?sizes=590x332&page=15258"},"data":[{"is_staffpick":false,"is_featured":true,"type":"clip","clip":{"uri":"\\/videos\\/106557563","name":"Hot Rod Revue: The South","link":"https:\\/\\/vimeo.com\\/106557563","duration":4069,"created_time":"2014-09-19T03:38:04+00:00","privacy":{"view":"ptv"},"pictures":{"sizes":[{"width":"590","height":"332","link":"https:\\/\\/i.vimeocdn.com\\/video\\/489717884_590x332.jpg?r=pad","link_with_play_button":"https:\\/\\/i.vimeocdn.com\\/filter\\/overlay?src0=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F489717884_590x332.jpg&src1=http%3A%2F%2Ff.vimeocdn.com%2Fp%2Fimages%2Fcrawler_play.png"}]},"stats":{"plays":null},"metadata":{"connections":{"comments":{"total":0},"likes":{"total":5}},"interactions":[]},"user":{"name":"Cal Thorley","link":"https:\\/\\/vimeo.com\\/calthorley","pictures":{"sizes":[{"width":30,"height":30,"link":"https:\\/\\/i.vimeocdn.com\\/portrait\\/2545308_30x30?r=pad"},{"width":75,"height":75,"link":"https:\\/\\/i.vimeocdn.com\\/portrait\\/2545308_75x75?r=pad"},{"width":100,"height":100,"link":"https:\\/\\/i.vimeocdn.com\\/portrait\\/2545308_100x100?r=pad"},{"width":300,"height":300,"link":"https:\\/\\/i.vimeocdn.com\\/portrait\\/2545308_300x300?r=pad"}]}}}}]}};
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 27) 
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 28) """  # noqa
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 29)         response = mock.Mock(text=json)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 30)         results = vimeo.response(response)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 31)         self.assertEqual(type(results), list)
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 32)         self.assertEqual(len(results), 1)
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 33)         self.assertEqual(results[0]['title'], u'Hot Rod Revue: The South')
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 34)         self.assertEqual(results[0]['url'], 'https://vimeo.com/106557563')
04fa31b7 searx/tests/engines/test_vimeo.py (Cqoicebordel 2015-01-31 19:49:54 +0100 35)         self.assertEqual(results[0]['content'], '')
f6e9c074 tests/unit/engines/test_vimeo.py  (Adam Tauber  2016-12-11 02:33:04 +0100 36)         self.assertEqual(results[0]['thumbnail'], 'https://i.vimeocdn.com/video/489717884_590x332.jpg?r=pad')
