c65a409f (marc 2017-05-20 22:33:08 -0500  1) # -*- coding: utf-8 -*-
c65a409f (marc 2017-05-20 22:33:08 -0500  2) from collections import defaultdict
c65a409f (marc 2017-05-20 22:33:08 -0500  3) import mock
c65a409f (marc 2017-05-20 22:33:08 -0500  4) from searx.engines import duckduckgo_images
c65a409f (marc 2017-05-20 22:33:08 -0500  5) from searx.testing import SearxTestCase
c65a409f (marc 2017-05-20 22:33:08 -0500  6) 
c65a409f (marc 2017-05-20 22:33:08 -0500  7) 
c65a409f (marc 2017-05-20 22:33:08 -0500  8) class TestDuckduckgoImagesEngine(SearxTestCase):
c65a409f (marc 2017-05-20 22:33:08 -0500  9) 
c65a409f (marc 2017-05-20 22:33:08 -0500 10)     def test_request(self):
405e5c8f (marc 2017-07-04 22:29:06 -0500 11)         duckduckgo_images.supported_languages = ['de-CH', 'en-US']
405e5c8f (marc 2017-07-04 22:29:06 -0500 12) 
c65a409f (marc 2017-05-20 22:33:08 -0500 13)         query = 'test_query'
c65a409f (marc 2017-05-20 22:33:08 -0500 14)         dicto = defaultdict(dict)
c65a409f (marc 2017-05-20 22:33:08 -0500 15)         dicto['is_test'] = True
c65a409f (marc 2017-05-20 22:33:08 -0500 16)         dicto['pageno'] = 1
c65a409f (marc 2017-05-20 22:33:08 -0500 17)         dicto['safesearch'] = 0
4d177039 (marc 2017-07-20 15:47:20 -0500 18)         dicto['language'] = 'en-US'
c65a409f (marc 2017-05-20 22:33:08 -0500 19)         params = duckduckgo_images.request(query, dicto)
c65a409f (marc 2017-05-20 22:33:08 -0500 20)         self.assertIn('url', params)
c65a409f (marc 2017-05-20 22:33:08 -0500 21)         self.assertIn(query, params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 22)         self.assertIn('duckduckgo.com', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 23)         self.assertIn('s=0', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 24)         self.assertIn('p=-1', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 25)         self.assertIn('vqd=12345', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 26) 
405e5c8f (marc 2017-07-04 22:29:06 -0500 27)         # test paging, safe search and language
c65a409f (marc 2017-05-20 22:33:08 -0500 28)         dicto['pageno'] = 2
c65a409f (marc 2017-05-20 22:33:08 -0500 29)         dicto['safesearch'] = 2
405e5c8f (marc 2017-07-04 22:29:06 -0500 30)         dicto['language'] = 'de'
c65a409f (marc 2017-05-20 22:33:08 -0500 31)         params = duckduckgo_images.request(query, dicto)
c65a409f (marc 2017-05-20 22:33:08 -0500 32)         self.assertIn('url', params)
c65a409f (marc 2017-05-20 22:33:08 -0500 33)         self.assertIn(query, params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 34)         self.assertIn('s=50', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 35)         self.assertIn('p=1', params['url'])
405e5c8f (marc 2017-07-04 22:29:06 -0500 36)         self.assertIn('ch-de', params['url'])
c65a409f (marc 2017-05-20 22:33:08 -0500 37) 
c65a409f (marc 2017-05-20 22:33:08 -0500 38)     def test_response(self):
c65a409f (marc 2017-05-20 22:33:08 -0500 39)         self.assertRaises(AttributeError, duckduckgo_images.response, None)
c65a409f (marc 2017-05-20 22:33:08 -0500 40)         self.assertRaises(AttributeError, duckduckgo_images.response, [])
c65a409f (marc 2017-05-20 22:33:08 -0500 41)         self.assertRaises(AttributeError, duckduckgo_images.response, '')
c65a409f (marc 2017-05-20 22:33:08 -0500 42)         self.assertRaises(AttributeError, duckduckgo_images.response, '[]')
c65a409f (marc 2017-05-20 22:33:08 -0500 43) 
c65a409f (marc 2017-05-20 22:33:08 -0500 44)         response = mock.Mock(text='If this error persists, please let us know: ops@duckduckgo.com')
c65a409f (marc 2017-05-20 22:33:08 -0500 45)         self.assertEqual(duckduckgo_images.response(response), [])
c65a409f (marc 2017-05-20 22:33:08 -0500 46) 
c65a409f (marc 2017-05-20 22:33:08 -0500 47)         json = u"""
c65a409f (marc 2017-05-20 22:33:08 -0500 48)         {
c65a409f (marc 2017-05-20 22:33:08 -0500 49)             "query": "test_query",
c65a409f (marc 2017-05-20 22:33:08 -0500 50)             "results": [
c65a409f (marc 2017-05-20 22:33:08 -0500 51)                 {
c65a409f (marc 2017-05-20 22:33:08 -0500 52)                     "title": "Result 1",
c65a409f (marc 2017-05-20 22:33:08 -0500 53)                     "url": "https://site1.url",
c65a409f (marc 2017-05-20 22:33:08 -0500 54)                     "thumbnail": "https://thumb1.nail",
c65a409f (marc 2017-05-20 22:33:08 -0500 55)                     "image": "https://image1"
c65a409f (marc 2017-05-20 22:33:08 -0500 56)                 },
c65a409f (marc 2017-05-20 22:33:08 -0500 57)                 {
c65a409f (marc 2017-05-20 22:33:08 -0500 58)                     "title": "Result 2",
c65a409f (marc 2017-05-20 22:33:08 -0500 59)                     "url": "https://site2.url",
c65a409f (marc 2017-05-20 22:33:08 -0500 60)                     "thumbnail": "https://thumb2.nail",
c65a409f (marc 2017-05-20 22:33:08 -0500 61)                     "image": "https://image2"
c65a409f (marc 2017-05-20 22:33:08 -0500 62)                 }
c65a409f (marc 2017-05-20 22:33:08 -0500 63)             ]
c65a409f (marc 2017-05-20 22:33:08 -0500 64)         }
c65a409f (marc 2017-05-20 22:33:08 -0500 65)         """
c65a409f (marc 2017-05-20 22:33:08 -0500 66)         response = mock.Mock(text=json)
c65a409f (marc 2017-05-20 22:33:08 -0500 67)         results = duckduckgo_images.response(response)
c65a409f (marc 2017-05-20 22:33:08 -0500 68)         self.assertEqual(len(results), 2)
c65a409f (marc 2017-05-20 22:33:08 -0500 69)         self.assertEqual(results[0]['title'], 'Result 1')
c65a409f (marc 2017-05-20 22:33:08 -0500 70)         self.assertEqual(results[0]['url'], 'https://site1.url')
c65a409f (marc 2017-05-20 22:33:08 -0500 71)         self.assertEqual(results[0]['thumbnail_src'], 'https://thumb1.nail')
c65a409f (marc 2017-05-20 22:33:08 -0500 72)         self.assertEqual(results[0]['img_src'], 'https://image1')
c65a409f (marc 2017-05-20 22:33:08 -0500 73)         self.assertEqual(results[1]['title'], 'Result 2')
c65a409f (marc 2017-05-20 22:33:08 -0500 74)         self.assertEqual(results[1]['url'], 'https://site2.url')
c65a409f (marc 2017-05-20 22:33:08 -0500 75)         self.assertEqual(results[1]['thumbnail_src'], 'https://thumb2.nail')
c65a409f (marc 2017-05-20 22:33:08 -0500 76)         self.assertEqual(results[1]['img_src'], 'https://image2')
