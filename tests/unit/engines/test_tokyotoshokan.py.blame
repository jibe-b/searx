547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   1) import mock
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   2) from collections import defaultdict
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   3) from searx.engines import tokyotoshokan
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   4) from searx.testing import SearxTestCase
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   5) from datetime import datetime
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   6) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   7) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   8) class TestTokyotoshokanEngine(SearxTestCase):
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600   9) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  10)     def test_request(self):
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  11)         query = 'test_query'
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  12)         dic = defaultdict(dict)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  13)         dic['pageno'] = 1
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  14)         params = tokyotoshokan.request(query, dic)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  15)         self.assertTrue('url' in params)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  16)         self.assertTrue(query in params['url'])
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  17)         self.assertTrue('tokyotosho.info' in params['url'])
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  18) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  19)     def test_response(self):
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  20)         resp = mock.Mock(text='<html></html>')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  21)         self.assertEqual(tokyotoshokan.response(resp), [])
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  22) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  23)         html = """
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  24)         <table class="listing">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  25)           <tbody>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  26)             <tr class="shade category_0">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  27)               <td rowspan="2">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  28)                 <a href="/?cat=7"><span class="sprite_cat-raw"></span></a>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  29)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  30)               <td class="desc-top">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  31)                 <a href="magnet:?xt=urn:btih:4c19eb46b5113685fbd2288ed2531b0b">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  32)                   <span class="sprite_magnet"></span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  33)                 </a>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  34)                 <a rel="nofollow" type="application/x-bittorrent" href="http://www.nyaa.se/f">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  35)                   Koyomimonogatari
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  36)                 </a>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  37)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  38)               <td class="web"><a rel="nofollow" href="details.php?id=975700">Details</a></td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  39)             </tr>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  40)             <tr class="shade category_0">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  41)               <td class="desc-bot">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  42)                 Authorized: <span class="auth_ok">Yes</span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  43)                 Submitter: <a href="?username=Ohys">Ohys</a> |
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  44)                 Size: 10.5MB |
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  45)                 Date: 2016-03-26 16:41 UTC |
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  46)                 Comment: sample comment
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  47)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  48)               <td style="color: #BBB; font-family: monospace" class="stats" align="right">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  49)                 S: <span style="color: red">53</span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  50)                 L: <span style="color: red">18</span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  51)                 C: <span style="color: red">0</span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  52)                 ID: 975700
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  53)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  54)             </tr>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  55) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  56)             <tr class="category_0">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  57)               <td rowspan="2">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  58)                 <a href="/?cat=7"><span class="sprite_cat-raw"></span></a>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  59)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  60)               <td class="desc-top">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  61)                 <a rel="nofollow" type="application/x-bittorrent" href="http://google.com/q">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  62)                   Owarimonogatari
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  63)                 </a>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  64)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  65)               <td class="web"><a rel="nofollow" href="details.php?id=975700">Details</a></td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  66)             </tr>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  67)             <tr class="category_0">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  68)               <td class="desc-bot">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  69)                 Submitter: <a href="?username=Ohys">Ohys</a> |
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  70)                 Size: 932.84EB |
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  71)                 Date: QWERTY-03-26 16:41 UTC
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  72)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  73)               <td style="color: #BBB; font-family: monospace" class="stats" align="right">
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  74)                 S: <span style="color: red">0</span>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  75)               </td>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  76)             </tr>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  77)           </tbody>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  78)         </table>
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  79)         """
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  80) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  81)         resp = mock.Mock(text=html)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  82)         results = tokyotoshokan.response(resp)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  83) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  84)         self.assertEqual(type(results), list)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  85)         self.assertEqual(len(results), 2)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  86) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  87)         # testing the first result, which has correct format
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  88)         # and should have all information fields filled
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  89)         r = results[0]
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  90)         self.assertEqual(r['url'], 'http://www.nyaa.se/f')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  91)         self.assertEqual(r['title'], 'Koyomimonogatari')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  92)         self.assertEqual(r['magnetlink'], 'magnet:?xt=urn:btih:4c19eb46b5113685fbd2288ed2531b0b')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  93)         self.assertEqual(r['filesize'], int(1024 * 1024 * 10.5))
52e615de (Adam Tauber   2016-11-30 18:43:03 +0100  94)         self.assertEqual(r['publishedDate'], datetime(2016, 3, 26, 16, 41))
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  95)         self.assertEqual(r['content'], 'Comment: sample comment')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  96)         self.assertEqual(r['seed'], 53)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  97)         self.assertEqual(r['leech'], 18)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  98) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600  99)         # testing the second result, which does not include magnet link,
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 100)         # seed & leech info, and has incorrect size & creation date
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 101)         r = results[1]
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 102)         self.assertEqual(r['url'], 'http://google.com/q')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 103)         self.assertEqual(r['title'], 'Owarimonogatari')
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 104) 
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 105)         self.assertFalse('magnetlink' in r)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 106)         self.assertFalse('filesize' in r)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 107)         self.assertFalse('content' in r)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 108)         self.assertFalse('publishedDate' in r)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 109)         self.assertFalse('seed' in r)
547b8a87 (Kirill Isakov 2016-03-27 00:49:57 +0600 110)         self.assertFalse('leech' in r)
