aa85045a (Pydo 2016-09-05 14:50:26 -0400  1) import mock
aa85045a (Pydo 2016-09-05 14:50:26 -0400  2) from collections import defaultdict
aa85045a (Pydo 2016-09-05 14:50:26 -0400  3) from searx.engines import seedpeer
aa85045a (Pydo 2016-09-05 14:50:26 -0400  4) from searx.testing import SearxTestCase
aa85045a (Pydo 2016-09-05 14:50:26 -0400  5) from datetime import datetime
aa85045a (Pydo 2016-09-05 14:50:26 -0400  6) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400  7) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400  8) class TestSeedPeerEngine(SearxTestCase):
aa85045a (Pydo 2016-09-05 14:50:26 -0400  9) 
ec4a0362 (Pydo 2016-09-05 15:37:20 -0400 10)     html = ''
ec4a0362 (Pydo 2016-09-05 15:37:20 -0400 11)     with open('./tests/unit/engines/seedpeer_fixture.html') as fixture:
ec4a0362 (Pydo 2016-09-05 15:37:20 -0400 12)         html += fixture.read()
aa85045a (Pydo 2016-09-05 14:50:26 -0400 13) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400 14)     def test_request(self):
aa85045a (Pydo 2016-09-05 14:50:26 -0400 15)         query = 'test_query'
aa85045a (Pydo 2016-09-05 14:50:26 -0400 16)         dicto = defaultdict(dict)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 17)         dicto['pageno'] = 1
aa85045a (Pydo 2016-09-05 14:50:26 -0400 18)         params = seedpeer.request(query, dicto)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 19)         self.assertIn('url', params)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 20)         self.assertIn(query, params['url'])
aa85045a (Pydo 2016-09-05 14:50:26 -0400 21)         self.assertIn('seedpeer.eu', params['url'])
aa85045a (Pydo 2016-09-05 14:50:26 -0400 22) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400 23)     def test_response_raises_attr_error_on_empty_response(self):
aa85045a (Pydo 2016-09-05 14:50:26 -0400 24)         self.assertRaises(AttributeError, seedpeer.response, None)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 25)         self.assertRaises(AttributeError, seedpeer.response, [])
aa85045a (Pydo 2016-09-05 14:50:26 -0400 26)         self.assertRaises(AttributeError, seedpeer.response, '')
aa85045a (Pydo 2016-09-05 14:50:26 -0400 27)         self.assertRaises(AttributeError, seedpeer.response, '[]')
aa85045a (Pydo 2016-09-05 14:50:26 -0400 28) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400 29)     def test_response_returns_empty_list(self):
aa85045a (Pydo 2016-09-05 14:50:26 -0400 30)         response = mock.Mock(text='<html></html>')
aa85045a (Pydo 2016-09-05 14:50:26 -0400 31)         self.assertEqual(seedpeer.response(response), [])
aa85045a (Pydo 2016-09-05 14:50:26 -0400 32) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400 33)     def test_response_returns_all_results(self):
aa85045a (Pydo 2016-09-05 14:50:26 -0400 34)         response = mock.Mock(text=self.html)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 35)         results = seedpeer.response(response)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 36)         self.assertTrue(isinstance(results, list))
aa85045a (Pydo 2016-09-05 14:50:26 -0400 37)         self.assertEqual(len(results), 2)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 38) 
aa85045a (Pydo 2016-09-05 14:50:26 -0400 39)     def test_response_returns_correct_results(self):
aa85045a (Pydo 2016-09-05 14:50:26 -0400 40)         response = mock.Mock(text=self.html)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 41)         results = seedpeer.response(response)
aa85045a (Pydo 2016-09-05 14:50:26 -0400 42)         self.assertEqual(
aa85045a (Pydo 2016-09-05 14:50:26 -0400 43)             results[0]['title'], 'Narcos - Season 2 - 720p WEBRiP - x265 HEVC - ShAaNiG '
aa85045a (Pydo 2016-09-05 14:50:26 -0400 44)         )
aa85045a (Pydo 2016-09-05 14:50:26 -0400 45)         self.assertEqual(
aa85045a (Pydo 2016-09-05 14:50:26 -0400 46)             results[0]['url'],
aa85045a (Pydo 2016-09-05 14:50:26 -0400 47)             'http://www.seedpeer.eu/details/11685972/Narcos---Season-2---720p-WEBRiP---x265-HEVC---ShAaNiG.html'
aa85045a (Pydo 2016-09-05 14:50:26 -0400 48)         )
aa85045a (Pydo 2016-09-05 14:50:26 -0400 49)         self.assertEqual(results[0]['content'], '2.48 GB, 1 day')
aa85045a (Pydo 2016-09-05 14:50:26 -0400 50)         self.assertEqual(results[0]['seed'], '861')
ec4a0362 (Pydo 2016-09-05 15:37:20 -0400 51)         self.assertEqual(results[0]['leech'], '332')
