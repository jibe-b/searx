d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600   1) # -*- coding: utf-8 -*-
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600   2) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600   3) """
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600   4)  Arch Linux Wiki
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600   5) 
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600   6)  @website      https://wiki.archlinux.org
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600   7)  @provide-api  no (Mediawiki provides API, but Arch Wiki blocks access to it
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600   8)  @using-api    no
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600   9)  @results      HTML
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600  10)  @stable       no (HTML can change)
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600  11)  @parse        url, title
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  12) """
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  13) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  14) from lxml import html
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  15) from searx.engines.xpath import extract_text
52e615de (Adam Tauber   2016-11-30 18:43:03 +0100  16) from searx.url_utils import urlencode, urljoin
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  17) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  18) # engine dependent config
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  19) categories = ['it']
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  20) language_support = True
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  21) paging = True
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  22) base_url = 'https://wiki.archlinux.org'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  23) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  24) # xpath queries
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  25) xpath_results = '//ul[@class="mw-search-results"]/li'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  26) xpath_link = './/div[@class="mw-search-result-heading"]/a'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  27) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  28) 
4d177039 (marc          2017-07-20 15:47:20 -0500  29) # cut 'en' from 'en-US', 'de' from 'de-CH', and so on
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  30) def locale_to_lang_code(locale):
149802c5 (marc          2016-08-05 23:34:56 -0500  31)     if locale.find('-') >= 0:
149802c5 (marc          2016-08-05 23:34:56 -0500  32)         locale = locale.split('-')[0]
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  33)     return locale
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  34) 
7e16c9d3 (stepshal      2016-07-16 00:49:23 +0700  35) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  36) # wikis for some languages were moved off from the main site, we need to make
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  37) # requests to correct URLs to be able to get results in those languages
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  38) lang_urls = {
4d177039 (marc          2017-07-20 15:47:20 -0500  39)     'en': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  40)         'base': 'https://wiki.archlinux.org',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  41)         'search': '/index.php?title=Special:Search&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  42)     },
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  43)     'de': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  44)         'base': 'https://wiki.archlinux.de',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  45)         'search': '/index.php?title=Spezial:Suche&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  46)     },
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  47)     'fr': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  48)         'base': 'https://wiki.archlinux.fr',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  49)         'search': '/index.php?title=Spécial:Recherche&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  50)     },
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  51)     'ja': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  52)         'base': 'https://wiki.archlinuxjp.org',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  53)         'search': '/index.php?title=特別:検索&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  54)     },
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  55)     'ro': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  56)         'base': 'http://wiki.archlinux.ro',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  57)         'search': '/index.php?title=Special:Căutare&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  58)     },
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  59)     'tr': {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  60)         'base': 'http://archtr.org/wiki',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  61)         'search': '/index.php?title=Özel:Ara&offset={offset}&{query}'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  62)     }
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  63) }
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  64) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  65) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  66) # get base & search URLs for selected language
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  67) def get_lang_urls(language):
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  68)     if language in lang_urls:
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  69)         return lang_urls[language]
4d177039 (marc          2017-07-20 15:47:20 -0500  70)     return lang_urls['en']
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  71) 
7e16c9d3 (stepshal      2016-07-16 00:49:23 +0700  72) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  73) # Language names to build search requests for
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  74) # those languages which are hosted on the main site.
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  75) main_langs = {
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  76)     'ar': 'العربية',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  77)     'bg': 'Български',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  78)     'cs': 'Česky',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  79)     'da': 'Dansk',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  80)     'el': 'Ελληνικά',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  81)     'es': 'Español',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  82)     'he': 'עברית',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  83)     'hr': 'Hrvatski',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  84)     'hu': 'Magyar',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  85)     'it': 'Italiano',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  86)     'ko': '한국어',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  87)     'lt': 'Lietuviškai',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  88)     'nl': 'Nederlands',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  89)     'pl': 'Polski',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  90)     'pt': 'Português',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  91)     'ru': 'Русский',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  92)     'sl': 'Slovenský',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  93)     'th': 'ไทย',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  94)     'uk': 'Українська',
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  95)     'zh': '简体中文'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  96) }
149802c5 (marc          2016-08-05 23:34:56 -0500  97) supported_languages = dict(lang_urls, **main_langs)
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  98) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600  99) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 100) # do search-request
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 101) def request(query, params):
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 102)     # translate the locale (e.g. 'en_US') to language code ('en')
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 103)     language = locale_to_lang_code(params['language'])
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 104) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 105)     # if our language is hosted on the main site, we need to add its name
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 106)     # to the query in order to narrow the results to that language
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 107)     if language in main_langs:
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 108)         query += '(' + main_langs[language] + ')'
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 109) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 110)     # prepare the request parameters
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 111)     query = urlencode({'search': query})
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 112)     offset = (params['pageno'] - 1) * 20
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 113) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 114)     # get request URLs for our language of choice
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 115)     urls = get_lang_urls(language)
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 116)     search_url = urls['base'] + urls['search']
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 117) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 118)     params['url'] = search_url.format(query=query, offset=offset)
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 119) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 120)     return params
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 121) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 122) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 123) # get response from search-request
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 124) def response(resp):
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 125)     # get the base URL for the language in which request was made
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 126)     language = locale_to_lang_code(resp.search_params['language'])
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 127)     base_url = get_lang_urls(language)['base']
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 128) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 129)     results = []
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 130) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 131)     dom = html.fromstring(resp.text)
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 132) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 133)     # parse results
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 134)     for result in dom.xpath(xpath_results):
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 135)         link = result.xpath(xpath_link)[0]
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 136)         href = urljoin(base_url, link.attrib.get('href'))
16bdc0ba (Adam Tauber   2016-12-09 11:44:24 +0100 137)         title = extract_text(link)
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 138) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 139)         results.append({'url': href,
8b7dc2ac (Kirill Isakov 2016-03-25 00:38:48 +0600 140)                         'title': title})
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 141) 
d748b841 (Kirill Isakov 2016-03-24 01:57:27 +0600 142)     return results
