2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  1) #  Seedpeer (Videos, Music, Files)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  2) #
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  3) # @website     http://seedpeer.eu
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  4) # @provide-api no (nothing found)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  5) #
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  6) # @using-api   no
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  7) # @results     HTML (using search portal)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  8) # @stable      yes (HTML can change)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400  9) # @parse       url, title, content, seed, leech, magnetlink
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 10) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 11) from lxml import html
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 12) from operator import itemgetter
52e615de (Adam Tauber 2016-11-30 18:43:03 +0100 13) from searx.url_utils import quote, urljoin
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 14) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 15) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 16) url = 'http://www.seedpeer.eu/'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 17) search_url = url + 'search/{search_term}/7/{page_no}.html'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 18) # specific xpath variables
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 19) torrent_xpath = '//*[@id="body"]/center/center/table[2]/tr/td/a'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 20) alternative_torrent_xpath = '//*[@id="body"]/center/center/table[1]/tr/td/a'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 21) title_xpath = '//*[@id="body"]/center/center/table[2]/tr/td/a/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 22) alternative_title_xpath = '//*[@id="body"]/center/center/table/tr/td/a'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 23) seeds_xpath = '//*[@id="body"]/center/center/table[2]/tr/td[4]/font/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 24) alternative_seeds_xpath = '//*[@id="body"]/center/center/table/tr/td[4]/font/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 25) peers_xpath = '//*[@id="body"]/center/center/table[2]/tr/td[5]/font/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 26) alternative_peers_xpath = '//*[@id="body"]/center/center/table/tr/td[5]/font/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 27) age_xpath = '//*[@id="body"]/center/center/table[2]/tr/td[2]/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 28) alternative_age_xpath = '//*[@id="body"]/center/center/table/tr/td[2]/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 29) size_xpath = '//*[@id="body"]/center/center/table[2]/tr/td[3]/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 30) alternative_size_xpath = '//*[@id="body"]/center/center/table/tr/td[3]/text()'
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 31) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 32) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 33) # do search-request
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 34) def request(query, params):
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 35)     params['url'] = search_url.format(search_term=quote(query),
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 36)                                       page_no=params['pageno'] - 1)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 37)     return params
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 38) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 39) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 40) # get response from search-request
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 41) def response(resp):
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 42)     results = []
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 43)     dom = html.fromstring(resp.text)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 44)     torrent_links = dom.xpath(torrent_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 45)     if len(torrent_links) > 0:
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 46)         seeds = dom.xpath(seeds_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 47)         peers = dom.xpath(peers_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 48)         titles = dom.xpath(title_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 49)         sizes = dom.xpath(size_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 50)         ages = dom.xpath(age_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 51)     else:  # under ~5 results uses a different xpath
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 52)         torrent_links = dom.xpath(alternative_torrent_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 53)         seeds = dom.xpath(alternative_seeds_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 54)         peers = dom.xpath(alternative_peers_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 55)         titles = dom.xpath(alternative_title_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 56)         sizes = dom.xpath(alternative_size_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 57)         ages = dom.xpath(alternative_age_xpath)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 58)     # return empty array if nothing is found
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 59)     if not torrent_links:
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 60)         return []
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 61) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 62)     # parse results
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 63)     for index, result in enumerate(torrent_links):
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 64)         link = result.attrib.get('href')
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 65)         href = urljoin(url, link)
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 66)         results.append({'url': href,
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 67)                         'title': titles[index].text_content(),
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 68)                         'content': '{}, {}'.format(sizes[index], ages[index]),
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 69)                         'seed': seeds[index],
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 70)                         'leech': peers[index],
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 71) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 72)                         'template': 'torrent.html'})
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 73) 
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 74)     # return results sorted by seeder
2c2123b2 (Pydo        2016-09-05 14:51:02 -0400 75)     return sorted(results, key=itemgetter('seed'), reverse=True)
