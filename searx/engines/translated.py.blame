b7d578ae (potato      2016-09-06 16:36:04 +0200  1) """
b7d578ae (potato      2016-09-06 16:36:04 +0200  2)  MyMemory Translated
b7d578ae (potato      2016-09-06 16:36:04 +0200  3) 
b7d578ae (potato      2016-09-06 16:36:04 +0200  4)  @website     https://mymemory.translated.net/
b7d578ae (potato      2016-09-06 16:36:04 +0200  5)  @provide-api yes (https://mymemory.translated.net/doc/spec.php)
b7d578ae (potato      2016-09-06 16:36:04 +0200  6)  @using-api   yes
b7d578ae (potato      2016-09-06 16:36:04 +0200  7)  @results     JSON
b7d578ae (potato      2016-09-06 16:36:04 +0200  8)  @stable      yes
b7d578ae (potato      2016-09-06 16:36:04 +0200  9)  @parse       url, title, content
b7d578ae (potato      2016-09-06 16:36:04 +0200 10) """
ab471fd1 (potato      2016-09-06 15:40:07 +0200 11) import re
52e615de (Adam Tauber 2016-11-30 18:43:03 +0100 12) from sys import version_info
983415bc (potato      2016-09-06 16:43:48 +0200 13) from searx.utils import is_valid_lang
ab471fd1 (potato      2016-09-06 15:40:07 +0200 14) 
52e615de (Adam Tauber 2016-11-30 18:43:03 +0100 15) if version_info[0] == 3:
52e615de (Adam Tauber 2016-11-30 18:43:03 +0100 16)     unicode = str
52e615de (Adam Tauber 2016-11-30 18:43:03 +0100 17) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 18) categories = ['general']
3144ec1d (Adam Tauber 2016-09-06 17:17:42 +0200 19) url = u'http://api.mymemory.translated.net/get?q={query}&langpair={from_lang}|{to_lang}{key}'
3144ec1d (Adam Tauber 2016-09-06 17:17:42 +0200 20) web_url = u'http://mymemory.translated.net/en/{from_lang}/{to_lang}/{query}'
ab471fd1 (potato      2016-09-06 15:40:07 +0200 21) weight = 100
ab471fd1 (potato      2016-09-06 15:40:07 +0200 22) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 23) parser_re = re.compile(u'.*?([a-z]+)-([a-z]+) (.{2,})$', re.I)
8c72a227 (potato      2016-09-06 16:12:34 +0200 24) api_key = ''
ab471fd1 (potato      2016-09-06 15:40:07 +0200 25) 
c051e6a2 (potato      2016-09-06 15:44:05 +0200 26) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 27) def request(query, params):
ab471fd1 (potato      2016-09-06 15:40:07 +0200 28)     m = parser_re.match(unicode(query, 'utf8'))
ab471fd1 (potato      2016-09-06 15:40:07 +0200 29)     if not m:
ab471fd1 (potato      2016-09-06 15:40:07 +0200 30)         return params
ab471fd1 (potato      2016-09-06 15:40:07 +0200 31) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 32)     from_lang, to_lang, query = m.groups()
ab471fd1 (potato      2016-09-06 15:40:07 +0200 33) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 34)     from_lang = is_valid_lang(from_lang)
ab471fd1 (potato      2016-09-06 15:40:07 +0200 35)     to_lang = is_valid_lang(to_lang)
ab471fd1 (potato      2016-09-06 15:40:07 +0200 36) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 37)     if not from_lang or not to_lang:
ab471fd1 (potato      2016-09-06 15:40:07 +0200 38)         return params
ab471fd1 (potato      2016-09-06 15:40:07 +0200 39) 
8c72a227 (potato      2016-09-06 16:12:34 +0200 40)     if api_key:
8c72a227 (potato      2016-09-06 16:12:34 +0200 41)         key_form = '&key=' + api_key
8c72a227 (potato      2016-09-06 16:12:34 +0200 42)     else:
8c72a227 (potato      2016-09-06 16:12:34 +0200 43)         key_form = ''
ab471fd1 (potato      2016-09-06 15:40:07 +0200 44)     params['url'] = url.format(from_lang=from_lang[1],
ab471fd1 (potato      2016-09-06 15:40:07 +0200 45)                                to_lang=to_lang[1],
8c72a227 (potato      2016-09-06 16:12:34 +0200 46)                                query=query,
8c72a227 (potato      2016-09-06 16:12:34 +0200 47)                                key=key_form)
ab471fd1 (potato      2016-09-06 15:40:07 +0200 48)     params['query'] = query
ab471fd1 (potato      2016-09-06 15:40:07 +0200 49)     params['from_lang'] = from_lang
ab471fd1 (potato      2016-09-06 15:40:07 +0200 50)     params['to_lang'] = to_lang
ab471fd1 (potato      2016-09-06 15:40:07 +0200 51) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 52)     return params
ab471fd1 (potato      2016-09-06 15:40:07 +0200 53) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 54) 
ab471fd1 (potato      2016-09-06 15:40:07 +0200 55) def response(resp):
ab471fd1 (potato      2016-09-06 15:40:07 +0200 56)     results = []
ab471fd1 (potato      2016-09-06 15:40:07 +0200 57)     results.append({
16bdc0ba (Adam Tauber 2016-12-09 11:44:24 +0100 58)         'url': web_url.format(
c051e6a2 (potato      2016-09-06 15:44:05 +0200 59)             from_lang=resp.search_params['from_lang'][2],
c051e6a2 (potato      2016-09-06 15:44:05 +0200 60)             to_lang=resp.search_params['to_lang'][2],
16bdc0ba (Adam Tauber 2016-12-09 11:44:24 +0100 61)             query=resp.search_params['query']),
16bdc0ba (Adam Tauber 2016-12-09 11:44:24 +0100 62)         'title': '[{0}-{1}] {2}'.format(
c051e6a2 (potato      2016-09-06 15:44:05 +0200 63)             resp.search_params['from_lang'][1],
c051e6a2 (potato      2016-09-06 15:44:05 +0200 64)             resp.search_params['to_lang'][1],
16bdc0ba (Adam Tauber 2016-12-09 11:44:24 +0100 65)             resp.search_params['query']),
16bdc0ba (Adam Tauber 2016-12-09 11:44:24 +0100 66)         'content': resp.json()['responseData']['translatedText']
ab471fd1 (potato      2016-09-06 15:40:07 +0200 67)     })
ab471fd1 (potato      2016-09-06 15:40:07 +0200 68)     return results
